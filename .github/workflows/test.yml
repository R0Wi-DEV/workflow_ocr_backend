name: Build, test and push latest Docker Image

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set IMAGE_BASE
        id: image_base
        run: echo "IMAGE_BASE=ghcr.io/${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.image_base.outputs.IMAGE_BASE }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker test image
        uses: docker/build-push-action@v6
        with:
          context: .
          target: test
          load: true
          tags: workflow-ocr-backend-test
          
      - name: Run Tests
        run: | 
              docker run --name test-container workflow-ocr-backend-test && \
              docker cp test-container:/app/coverage .

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage
            code-coverage-results.md

      - name: Build and push latest Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ${{ steps.image_base.outputs.IMAGE_BASE }}:latest,${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: app
          platforms: linux/amd64,linux/arm64